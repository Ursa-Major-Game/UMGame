[gd_scene load_steps=18 format=2]

[ext_resource path="res://Common/Shaders/shaderplaceholder.png" type="Texture" id=1]
[ext_resource path="res://Common/Background.gd" type="Script" id=2]

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0.0357143, 0.555556, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.0663757, 0.160199, 0.292969, 1, 0.0329285, 0.153541, 0.324219, 1 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 4 )
width = 1280

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float columns = 64.0;
uniform float rows = 36.0;
uniform float border_width = 0.05;
uniform vec4 border_color : hint_color;


void fragment() {
    vec2 grid = fract(vec2(UV.x * columns, UV.y * rows));
	vec2 bottom_left = step(vec2(border_width), grid);
	vec2 top_right = step(vec2(border_width), 1.0 - grid);
	COLOR = border_color - (bottom_left.x * bottom_left.y * top_right.x * top_right.y);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 3 )
shader_param/columns = 30.0
shader_param/rows = 30.0
shader_param/border_width = 0.05
shader_param/border_color = Color( 0.705882, 0.756863, 0.764706, 1 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

uniform sampler2D color_gradient;
uniform sampler2D noiseTexture;
uniform float speed: hint_range (0.0,5.0);
uniform float variation: hint_range (0.0,1.0);
uniform float width: hint_range (0.0,1.0);

void fragment(){
	
	vec2 noise_uv = vec2(UV.x+TIME*speed, UV.y-TIME*speed);
	float noise_sample = texture(noiseTexture, noise_uv).r;
	float x_offset = noise_sample*variation - variation/2.0;
	COLOR = texture(color_gradient, vec2((UV.x-0.5)/width + 0.5 + x_offset/width, UV.y));
}"

[sub_resource type="Gradient" id=11]
colors = PoolColorArray( 0, 0, 0, 0, 1, 1, 1, 1 )

[sub_resource type="GradientTexture2D" id=12]
gradient = SubResource( 11 )
width = 72
fill_from = Vector2( 0, 0.0979167 )
fill_to = Vector2( 0.944649, 0.028125 )

[sub_resource type="OpenSimplexNoise" id=13]

[sub_resource type="NoiseTexture" id=14]
noise = SubResource( 13 )

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/speed = 0.104
shader_param/variation = 0.229
shader_param/width = 1.0
shader_param/color_gradient = SubResource( 12 )
shader_param/noiseTexture = SubResource( 14 )

[sub_resource type="Shader" id=15]
code = "shader_type canvas_item;

uniform sampler2D color_gradient;
uniform sampler2D noiseTexture;
uniform float speed: hint_range (0.0,5.0);
uniform float variation: hint_range (0.0,1.0);
uniform float width: hint_range (0.0,1.0);

void fragment(){
	
	vec2 noise_uv = vec2(UV.x+TIME*speed, UV.y-TIME*speed);
	float noise_sample = texture(noiseTexture, noise_uv).r;
	float x_offset = noise_sample*variation - variation/2.0;
	COLOR = texture(color_gradient, vec2((UV.x-0.5)/width + 0.5 + x_offset/width, UV.y));
}"

[sub_resource type="GradientTexture2D" id=16]
gradient = SubResource( 11 )
width = 72
fill_from = Vector2( 0.904059, 0.524479 )
fill_to = Vector2( 0.147601, 0.516146 )

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 15 )
shader_param/speed = 0.104
shader_param/variation = 0.229
shader_param/width = 1.0
shader_param/color_gradient = SubResource( 16 )
shader_param/noiseTexture = SubResource( 14 )

[sub_resource type="Animation" id=7]
resource_name = "OpenView"
tracks/0/type = "value"
tracks/0/path = NodePath("RightSide:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 250, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LeftSide:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( -300, 0 ) ]
}

[sub_resource type="Animation" id=8]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("RightSide:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LeftSide:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[node name="Background" type="Node2D"]
script = ExtResource( 2 )

[node name="LeftSide" type="Node2D" parent="."]

[node name="BackgroundColor" type="Sprite" parent="LeftSide"]
modulate = Color( 1, 1, 1, 0.392157 )
position = Vector2( 667.645, -7.49381 )
rotation = 1.5708
scale = Vector2( 0.584454, 682.085 )
texture = SubResource( 5 )
centered = false

[node name="Grid" type="Sprite" parent="LeftSide"]
modulate = Color( 1, 1, 1, 0.254902 )
material = SubResource( 6 )
position = Vector2( 23, 5 )
scale = Vector2( 2.67152, 3.24743 )
texture = ExtResource( 1 )
centered = false

[node name="LeftPosition2D" type="Position2D" parent="LeftSide"]
position = Vector2( 670, 0 )

[node name="ColorRect" type="ColorRect" parent="LeftSide"]
material = SubResource( 10 )
margin_left = 619.0
margin_right = 659.0
margin_bottom = 720.0

[node name="RightSide" type="Node2D" parent="."]

[node name="BackgroundColor" type="Sprite" parent="RightSide"]
modulate = Color( 1, 1, 1, 0.392157 )
position = Vector2( 1292.49, -7.49155 )
rotation = 1.5708
scale = Vector2( 0.584454, 633.004 )
texture = SubResource( 5 )
centered = false

[node name="Grid" type="Sprite" parent="RightSide"]
modulate = Color( 1, 1, 1, 0.254902 )
material = SubResource( 6 )
position = Vector2( 663.29, 5 )
scale = Vector2( 2.67333, 3.24743 )
texture = ExtResource( 1 )
centered = false

[node name="ColorRect2" type="ColorRect" parent="RightSide"]
material = SubResource( 17 )
margin_left = 659.0
margin_right = 699.0
margin_bottom = 720.0

[node name="RightPosition2D" type="Position2D" parent="RightSide"]
position = Vector2( 660, 720 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/OpenView = SubResource( 7 )
anims/RESET = SubResource( 8 )
